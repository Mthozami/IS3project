-- Create Database
CREATE DATABASE LibraryDB;
USE LibraryDB;

-- Users Table (Admin and Borrower)
CREATE TABLE Users (
    UserID INT AUTO_INCREMENT PRIMARY KEY,
    FullName VARCHAR(100) NOT NULL,
    Email VARCHAR(100) NOT NULL UNIQUE,
    Password VARCHAR(255) NOT NULL,
    PhoneNumber VARCHAR(15),
    Role ENUM('Admin', 'Borrower') NOT NULL,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    INDEX idx_email (Email)
);

-- Books Table
CREATE TABLE Books (
    BookID INT AUTO_INCREMENT PRIMARY KEY,
    Title VARCHAR(255) NOT NULL,
    Quantity INT NOT NULL,
	ISBN VARCHAR(20) UNIQUE,
    INDEX idx_title (Title)
);

-- Borrowings Table
CREATE TABLE Borrowings (
    BorrowingID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    BookID INT NOT NULL,
    Quantity INT DEFAULT 1,
    BorrowedDate DATE NOT NULL,
    Status ENUM('borrowed', 'returned') DEFAULT 'borrowed',
    ReturnDate DATE NOT NULL,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    FOREIGN KEY (BookID) REFERENCES Books(BookID) ON DELETE CASCADE,
    INDEX idx_user_book (UserID, BookID)
);

-- Add some columns on Borrowings table



-- Fines Table
CREATE TABLE Fines (
    FineID INT AUTO_INCREMENT PRIMARY KEY,
    BorrowingID INT NOT NULL,
    Amount DECIMAL(10,2) NOT NULL,
    IsPaid BOOLEAN DEFAULT FALSE,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (BorrowingID) REFERENCES Borrowings(BorrowingID) ON DELETE CASCADE,
    INDEX idx_fine_borrowing (BorrowingID)
);


-- Transactions Table
CREATE TABLE Transactions (
    TransactionID INT AUTO_INCREMENT PRIMARY KEY,
    FineID INT NOT NULL,
    ReceiptNumber VARCHAR(50) NOT NULL UNIQUE,
    PaymentDate DATETIME NOT NULL,
    PaidAmount DECIMAL(10,2) NOT NULL,
    FOREIGN KEY (FineID) REFERENCES Fines(FineID) ON DELETE CASCADE,
    INDEX idx_receipt (ReceiptNumber)
);

-- OTPs Table (for email verification / registration)
CREATE TABLE OTPs (
    OTPID INT AUTO_INCREMENT PRIMARY KEY,
    UserID INT NOT NULL,
    OTPCode VARCHAR(10) NOT NULL,
    ExpiryTime DATETIME NOT NULL,
    IsUsed BOOLEAN DEFAULT FALSE,
    CreatedAt DATETIME DEFAULT CURRENT_TIMESTAMP,
    FOREIGN KEY (UserID) REFERENCES Users(UserID) ON DELETE CASCADE,
    INDEX idx_userid (UserID),
    INDEX idx_expiry (ExpiryTime)
);

-- View All Tables
SHOW TABLES;

-- insert sample data to users table
INSERT INTO Users (FullName, Email, Password, PhoneNumber, Role)
VALUES (
    'Mthozami Mqokeli',
    'mthozamimqokeli@gmail.com',
    'Mtho@123', -- Use hashed password in production
    '0827189706',
    'Admin'
);

-- view a sample data added to  users table 
select * from Users;
TRUNCATE Users; 


-- check if books added in a database
select* from Books;

-- check if borrowing is added successfully.
select* from Borrowings;

-- Delete in Borrowings table for the second test
delete from Borrowings where BorrowingID=2;

-- Drop the database to reset index in the table 
DROP DATABASE LibraryDB;

-- Test fines working by inserting sample data in borrowings and fines table 

DELETE FROM Borrowings Where BorrowingID=6;




DELETE FROM Fines Where FineID=1;

-- view fines table
select *from Fines;


INSERT INTO Borrowings (UserID, BookID, BorrowDate, ReturnDate, Status)
VALUES
  (1, 101, '2025-04-01', '2025-04-08', NULL, 'Borrowed');

-- View Transactions
select* from Transactions;
 

